#pragma once
#include "mock.hpp"


struct LeftShiftMock {
    Mock mock{};

    LeftShiftMock() {
        add_test("827394650391827364598273645982736459827364598273645982736459827364598273645982736459982", "0xd4f3fd172f0267aa20bf327d49323bfeccd2d3c03394334a891b079b8f00a88976a814670000000000000000000000000", 99);
add_test("827394650391827364598273645982736459827364598273645982736459827364598273645982736459982", "0x1a9e7fa2e5e04cf54417e64fa926477fd99a5a7806728669512360f371e015112ed5028ce000000000000000000000000000000000000000000000000000000000000000000000", 276);
add_test("827394650391827364598273645982736459827364598273645982736459827364598273645982736459982", "0xd4f3fd172f0267aa20bf327d49323bfeccd2d3c03394334a891b079b8f00a88976a814670000000000000000000000000000000000000000000000", 183);
add_test("827394650391827364598273645982736459827364598273645982736459827364598273645982736459982", "0xd4f3fd172f0267aa20bf327d49323bfeccd2d3c03394334a891b079b8f00a88976a81467000000000000000000000000000000000000000000000000000000000000", 239);
add_test("827394650391827364598273645982736459827364598273645982736459827364598273645982736459982", "0x1a9e7fa2e5e04cf54417e64fa926477fd99a5a7806728669512360f371e015112ed5028ce000000", 24);
add_test("827394650391827364598273645982736459827364598273645982736459827364598273645982736459982", "0x353cff45cbc099ea882fcc9f524c8effb334b4f00ce50cd2a246c1e6e3c02a225daa0519c0000000000000000000000000000000000000000000000000000000000000000", 257);
add_test("827394650391827364598273645982736459827364598273645982736459827364598273645982736459982", "0x353cff45cbc099ea882fcc9f524c8effb334b4f00ce50cd2a246c1e6e3c02a225daa0519c000000000000000000000000000", 109);
add_test("827394650391827364598273645982736459827364598273645982736459827364598273645982736459982", "0x353cff45cbc099ea882fcc9f524c8effb334b4f00ce50cd2a246c1e6e3c02a225daa0519c0000000000000000000000000000", 113);
add_test("827394650391827364598273645982736459827364598273645982736459827364598273645982736459982", "0xd4f3fd172f0267aa20bf327d49323bfeccd2d3c03394334a891b079b8f00a88976a814670000000000000000000000000000000000000", 147);
add_test("827394650391827364598273645982736459827364598273645982736459827364598273645982736459982", "0x1a9e7fa2e5e04cf54417e64fa926477fd99a5a7806728669512360f371e015112ed5028ce00000000000000000000000000000000000000000000000000000000000000", 248);  
    }

    void add_test(std::string_view in, std::string_view out, std::size_t shift) {
        MockTest test = {
            .input = std::string(in),
            .output = std::string(out),
            .args = {}
        };

        test.add_arg("shift", { .val = shift });
        mock.tests.emplace_back(std::move(test));
    }
};
    
struct RightShiftMock {
    Mock mock{};

    RightShiftMock() {
        add_test("827394650391827364598273645982736459827364598273645982736459827364598273645982736459982", "0x1a9e7fa2e5e04cf54417e64fa926477fd99a5a78067286", 108);
add_test("827394650391827364598273645982736459827364598273645982736459827364598273645982736459982", "0x1a9e7fa2e5e04cf54417e64fa926477", 168);
add_test("827394650391827364598273645982736459827364598273645982736459827364598273645982736459982", "0x1a9e7fa2e5e04cf54", 224);
add_test("827394650391827364598273645982736459827364598273645982736459827364598273645982736459982", "0x1a9e7fa2e5e04cf54417e64fa926477fd99a5a7806728669512360f371e01511", 36);
add_test("827394650391827364598273645982736459827364598273645982736459827364598273645982736459982", "0x6a79fe8b978133d5105f993ea4991dff666969e0", 130);
add_test("827394650391827364598273645982736459827364598273645982736459827364598273645982736459982", "0x6a79fe8b978133d5105f993ea4991dff666969e019ca19a5", 98);
add_test("827394650391827364598273645982736459827364598273645982736459827364598273645982736459982", "0x6a79fe8b978133d5105f993ea4991dff666969e019ca19a5448d", 82);
add_test("827394650391827364598273645982736459827364598273645982736459827364598273645982736459982", "0xd4f3fd172f0267aa20bf327d49323bfeccd2d3c03394334a891b079b8f00a", 45);
add_test("827394650391827364598273645982736459827364598273645982736459827364598273645982736459982", "0x353cff45cbc099ea", 227);
add_test("827394650391827364598273645982736459827364598273645982736459827364598273645982736459982", "0x353c", 275);  
    }

    void add_test(std::string_view in, std::string_view out, std::size_t shift) {
        MockTest test = {
            .input = std::string(in),
            .output = std::string(out),
            .args = {}
        };

        test.add_arg("shift", { .val = shift });
        mock.tests.emplace_back(std::move(test));
    }
};
    